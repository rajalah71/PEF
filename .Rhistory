t[c(1,2,3,4,5),]
t[c(1,2,3,4,5),seq(1,8)]
t[c(1,2,3,4,5),seq(1,10)]
monitor = rstan::monitor(model_simple, print = FALSE)
monitor[seq(1,5), seq(1,12)]
rstan::loo(model_simple)
monitor = rstan::monitor(model_simple, print = FALSE)
monitor[seq(1,5), c(1,2,3,10)]
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# plot alpha and its ci
ggplot(as.data.frame(draws_simple)) +
geom_density(aes(x=alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=442, linetype="dashed", color="purple") +
geom_vline(xintercept=ci[1], linetype="dashed", color="red") +
geom_vline(xintercept=ci[2], linetype="dashed", color="red") +
annotate("text", x=445, y=0.1, label=paste("P(mean PEF value > 442) = ", round(p, 4))) +
xlab("Mean PEF value") +
theme_minimal()
# 95$\%$ credible intervals for medication on time of day
medication_effect <- draws_simple$beta1
time_of_day_effect <- draws_simple$beta2
day_of_week_effect <- draws_simple$beta3
# Lets calculate the relative effects of medication and time of day
# alpha plus time
alpha_time <- draws_simple$alpha + draws_simple$beta2
# alpha + medication
alpha_med <- draws_simple$alpha + draws_simple$beta1
# alpha_time / alpha
alpha_time_alpha <- alpha_time / draws_simple$alpha
# alpha_med / alpha
alpha_med_alpha <- alpha_med / draws_simple$alpha
# Probability that the relative effect of medication is over 15$%
p_med <- mean(alpha_med_alpha < 1.15)
# Probability that the relative effect of time of day is over 20$%
p_time <- mean(alpha_time_alpha < 1.20)
# Plot the relative effects
ggplot() +
geom_density(aes(x=alpha_time_alpha), fill="blue", alpha=0.5) +
geom_density(aes(x=alpha_med_alpha), fill="red", alpha=0.5) +
geom_vline(xintercept=1.15, linetype="dashed", color="red") +
geom_vline(xintercept=1.20, linetype="dashed", color="blue") +
annotate("text", x=1.13, y=50, label=paste("P(relative effect of time < 1.20) = ", round(p_time, 4))) +
annotate("text", x=1.13, y=45, label=paste("P(relative effect of meds < 1.15) = ", round(p_med, 4))) +
xlab("Relative effect") +
theme_minimal()
# 95$\%$ credible intervals for medication on time of day
medication_effect <- draws_simple$treatment
time_of_day_effect <- draws_simple$circadian
day_of_week_effect <- draws_simple$followup
# Lets calculate the relative effects of medication and time of day
# alpha plus time
alpha_time <- draws_simple$alpha + draws_simple$beta2
# alpha + medication
alpha_med <- draws_simple$alpha + draws_simple$beta1
# alpha_time / alpha
alpha_time_alpha <- alpha_time / draws_simple$alpha
# alpha_med / alpha
alpha_med_alpha <- alpha_med / draws_simple$alpha
# Probability that the relative effect of medication is over 15$%
p_med <- mean(alpha_med_alpha < 1.15)
# Probability that the relative effect of time of day is over 20$%
p_time <- mean(alpha_time_alpha < 1.20)
# Plot the relative effects
ggplot() +
geom_density(aes(x=alpha_time_alpha), fill="blue", alpha=0.5) +
geom_density(aes(x=alpha_med_alpha), fill="red", alpha=0.5) +
geom_vline(xintercept=1.15, linetype="dashed", color="red") +
geom_vline(xintercept=1.20, linetype="dashed", color="blue") +
annotate("text", x=1.13, y=50, label=paste("P(relative effect of time < 1.20) = ", round(p_time, 4))) +
annotate("text", x=1.13, y=45, label=paste("P(relative effect of meds < 1.15) = ", round(p_med, 4))) +
xlab("Relative effect") +
theme_minimal()
# 95$\%$ credible intervals for medication on time of day
medication_effect <- draws_simple$treatment
time_of_day_effect <- draws_simple$circadian
day_of_week_effect <- draws_simple$followup
# Lets calculate the relative effects of medication and time of day
# alpha plus time
alpha_time <- draws_simple$alpha + draws_simple$circadian
# alpha + medication
alpha_med <- draws_simple$alpha + draws_simple$traetment
# alpha_time / alpha
alpha_time_alpha <- alpha_time / draws_simple$alpha
# alpha_med / alpha
alpha_med_alpha <- alpha_med / draws_simple$alpha
# Probability that the relative effect of medication is over 15$%
p_med <- mean(alpha_med_alpha < 1.15)
# Probability that the relative effect of time of day is over 20$%
p_time <- mean(alpha_time_alpha < 1.20)
# Plot the relative effects
ggplot() +
geom_density(aes(x=alpha_time_alpha), fill="blue", alpha=0.5) +
geom_density(aes(x=alpha_med_alpha), fill="red", alpha=0.5) +
geom_vline(xintercept=1.15, linetype="dashed", color="red") +
geom_vline(xintercept=1.20, linetype="dashed", color="blue") +
annotate("text", x=1.13, y=50, label=paste("P(relative effect of time < 1.20) = ", round(p_time, 4))) +
annotate("text", x=1.13, y=45, label=paste("P(relative effect of meds < 1.15) = ", round(p_med, 4))) +
xlab("Relative effect") +
theme_minimal()
# 95$\%$ credible intervals for medication on time of day
medication_effect <- draws_simple$treatment
time_of_day_effect <- draws_simple$circadian
day_of_week_effect <- draws_simple$followup
# Lets calculate the relative effects of medication and time of day
# alpha plus time
alpha_time <- draws_simple$alpha + draws_simple$circadian
# alpha + medication
alpha_med <- draws_simple$alpha + draws_simple$treatment
# alpha_time / alpha
alpha_time_alpha <- alpha_time / draws_simple$alpha
# alpha_med / alpha
alpha_med_alpha <- alpha_med / draws_simple$alpha
# Probability that the relative effect of medication is over 15$%
p_med <- mean(alpha_med_alpha < 1.15)
# Probability that the relative effect of time of day is over 20$%
p_time <- mean(alpha_time_alpha < 1.20)
# Plot the relative effects
ggplot() +
geom_density(aes(x=alpha_time_alpha), fill="blue", alpha=0.5) +
geom_density(aes(x=alpha_med_alpha), fill="red", alpha=0.5) +
geom_vline(xintercept=1.15, linetype="dashed", color="red") +
geom_vline(xintercept=1.20, linetype="dashed", color="blue") +
annotate("text", x=1.13, y=50, label=paste("P(relative effect of time < 1.20) = ", round(p_time, 4))) +
annotate("text", x=1.13, y=45, label=paste("P(relative effect of meds < 1.15) = ", round(p_med, 4))) +
xlab("Relative effect") +
theme_minimal()
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# plot alpha and its ci
ggplot(as.data.frame(draws_simple)) +
geom_density(aes(x=alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=442, linetype="dashed", color="purple") +
geom_vline(xintercept=ci[1], linetype="dashed", color="red") +
geom_vline(xintercept=ci[2], linetype="dashed", color="red") +
annotate("text", x=445, y=0.1, label=paste("P(mean PEF value > 442) = ", round(p, 4))) +
xlab("Mean PEF value") +
ggtitle("Posterior distribution of alpha") +
theme_minimal()
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# datalist
data = list(
draws_simple = draws_simple,
ci = ci,
p = p)
ggplot(data = data) +
geom_density(aes(x=alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=442, linetype="dashed", color="purple") +
geom_vline(xintercept=ci[1], linetype="dashed", color="red") +
geom_vline(xintercept=ci[2], linetype="dashed", color="red") +
annotate("text", x=445, y=0.1, label=paste("P(mean PEF value > 442) = ", round(p, 4))) +
xlab("Mean PEF value") +
ggtitle("Posterior distribution of alpha") +
theme_minimal()
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# datalist
data = list(
draws_simple = draws_simple,
ci = ci,
p = p)
ggplot(data = data) +
geom_density(aes(x=alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=442, linetype="dashed", color="purple") +
geom_vline(xintercept=ci[1], linetype="dashed", color="red") +
geom_vline(xintercept=ci[2], linetype="dashed", color="red") +
annotate("text", x=445, y=0.1, label=paste("P(mean PEF value > 442) = ", round(p, 4))) +
xlab("Mean PEF value") +
ggtitle("Posterior distribution of alpha") +
theme_minimal()
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# datalist
data = list(
draws_simple = draws_simple,
ci = ci,
p = p)
ggplot(data = data) +
geom_density(aes(x = alpha), fill = "skyblue", color = "blue") +
geom_vline(xintercept = 442, linetype = "dashed", color = "red") +
geom_vline(xintercept = ci[1], linetype = "dashed", color = "blue") +
geom_vline(xintercept = ci[2], linetype = "dashed", color = "blue") +
annotate("text", x = 442, y = 0.001, label = "Reference value", color = "red", angle = 90, vjust = -1) +
annotate("text", x = ci[1], y = 0.001, label = "95% CI", color = "blue", angle = 90, vjust = -1) +
annotate("text", x = ci[2], y = 0.001, label = "95% CI", color = "blue", angle = 90, vjust = -1) +
labs(title = "Posterior distribution of alpha",
x = "alpha",
y = "Density") +
theme_minimal()
View(data)
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# datalist
data = list(
draws_simple = draws_simple,
ci = ci,
p = p)
ggplot(data = data) +
geom_density(aes(x = draws_simple$alpha), fill = "skyblue", color = "blue") +
geom_vline(xintercept = 442, linetype = "dashed", color = "red") +
geom_vline(xintercept = ci[1], linetype = "dashed", color = "blue") +
geom_vline(xintercept = ci[2], linetype = "dashed", color = "blue") +
annotate("text", x = 442, y = 0.001, label = "Reference value", color = "red", angle = 90, vjust = -1) +
annotate("text", x = ci[1], y = 0.001, label = "95% CI", color = "blue", angle = 90, vjust = -1) +
annotate("text", x = ci[2], y = 0.001, label = "95% CI", color = "blue", angle = 90, vjust = -1) +
labs(title = "Posterior distribution of alpha",
x = "alpha",
y = "Density") +
theme_minimal()
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# datalist
data = list(
draws_simple = draws_simple,
ci = ci,
p = p)
ggplot(data = data) +
geom_density(aes(x = alpha), fill = "skyblue", color = "blue")
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# datalist
data = list(
draws_simple = draws_simple,
ci = ci,
p = p)
ggplot(data = data) +
geom_density(aes(x = data$draws_simple$alpha), fill = "skyblue", color = "blue")
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# datalist
data = list(
draws_simple = draws_simple,
ci = ci,
p = p)
ggplot(data = data) +
geom_density(aes(x = draws_simple$alpha), fill = "skyblue", color = "blue")
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# datalist
data = list(
draws_simple = draws_simple,
ci = ci,
p = p)
ggplot(data = data) +
geom_histogram(aes(x = alpha), bins = 50, fill = "skyblue", color = "black")
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# datalist
data = list(
draws_simple = draws_simple,
ci = ci,
p = p)
ggplot(data = data) +
geom_histogram(aes(x = draws_simple$alpha), bins = 50, fill = "skyblue", color = "black")
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
ggplot(data.frame(alpha = draws_simple$alpha), aes(x = alpha)) +
geom_density(fill = "skyblue", color = "black") +
geom_vline(xintercept = 442, linetype = "dashed", color = "red") +
geom_vline(xintercept = ci[1], linetype = "dashed", color = "blue") +
geom_vline(xintercept = ci[2], linetype = "dashed", color = "blue") +
annotate("text", x = 442, y = 0.0005, label = "Reference value", color = "red") +
annotate("text", x = ci[1], y = 0.0005, label = "95% CI", color = "blue") +
labs(title = "Posterior distribution of alpha",
x = "alpha",
y = "Density") +
theme_minimal()
?ggplot
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# plot alpha and its ci
ggplot(as.data.frame(draws_simple)) +
geom_density(aes(x=alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=442, linetype="dashed", color="purple") +
geom_vline(xintercept=ci[1], linetype="dashed", color="red") +
geom_vline(xintercept=ci[2], linetype="dashed", color="red") +
annotate("text", x=445, y=0.1, label=paste("P(mean PEF value > 442) = ", round(p, 4))) +
xlab("Mean PEF value") +
ggtitle("Posterior distribution of alpha") +
theme_minimal()
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# plot alpha and its ci
ggplot(as.data.frame(draws_simple)) +
geom_density(aes(x=alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=442, linetype="dashed", color="purple") +
geom_vline(xintercept=ci[1], linetype="dashed", color="red") +
geom_vline(xintercept=ci[2], linetype="dashed", color="red") +
annotate("text", x=450, y=0.11, label=paste("P(mean PEF value > 442) = ", round(p, 4))) +
xlab("Mean PEF value") +
ggtitle("Posterior distribution of alpha") +
theme_minimal()
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# plot alpha and its ci
ggplot(as.data.frame(draws_simple)) +
geom_density(aes(x=alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=442, linetype="dashed", color="purple") +
geom_vline(xintercept=ci[1], linetype="dashed", color="red") +
geom_vline(xintercept=ci[2], linetype="dashed", color="red") +
annotate("text", x=450, y=0.11, label=paste("P(mean PEF value > 442) = ", round(p, 4))) +
xlab("Mean PEF value") +
ggtitle("Posterior distribution of alpha", subtitle = "With 95% credible interval and the reference value.") +
theme_minimal()
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# plot alpha and its ci
ggplot(as.data.frame(draws_simple)) +
geom_density(aes(x=alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=442, linetype="dashed", color="purple") +
geom_vline(xintercept=ci[1], linetype="dashed", color="red") +
geom_vline(xintercept=ci[2], linetype="dashed", color="red") +
annotate("text", x=450, y=0.11, label=paste("P(mean PEF value > 442) = ", round(p, 4))) +
xlab("Mean PEF value") +
ggtitle("Posterior distribution of alpha", subtitle = "With 95% credible interval and the reference value") +
theme_minimal()
# 95$\%$ credible intervals for medication on time of day
medication_effect <- draws_simple$treatment
time_of_day_effect <- draws_simple$circadian
day_of_week_effect <- draws_simple$followup
# Lets calculate the relative effects of medication and time of day
# alpha plus time
alpha_time <- draws_simple$alpha + draws_simple$circadian
# alpha + medication
alpha_med <- draws_simple$alpha + draws_simple$treatment
# alpha_time / alpha
alpha_time_alpha <- alpha_time / draws_simple$alpha
# alpha_med / alpha
alpha_med_alpha <- alpha_med / draws_simple$alpha
# Probability that the relative effect of medication is over 15$%
p_med <- mean(alpha_med_alpha < 1.15)
# Probability that the relative effect of time of day is over 20$%
p_time <- mean(alpha_time_alpha < 1.20)
# Plot the relative effects
p2 = ggplot() +
geom_density(aes(x=alpha_med_alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=1.15, linetype="dashed", color="purple") +
annotate("text", x=1.2, y=0.5, label=paste("P(relative effect of medication < 15%) = ", round(p_med, 4))) +
xlab("Relative effect of medication") +
ggtitle("Posterior distribution of the relative effect of medication", subtitle = "With 15% threshold") +
theme_minimal()
p3 = ggplot() +
geom_density(aes(x=alpha_time_alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=1.20, linetype="dashed", color="purple") +
annotate("text", x=1.25, y=0.5, label=paste("P(relative effect of time of day < 20%) = ", round(p_time, 4))) +
xlab("Relative effect of time of day") +
ggtitle("Posterior distribution of the relative effect of time of day", subtitle = "With 20% threshold") +
theme_minimal()
grid.arrange(p1, p2, p3, ncol=1)
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# plot alpha and its ci
p1 = ggplot(as.data.frame(draws_simple)) +
geom_density(aes(x=alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=442, linetype="dashed", color="purple") +
geom_vline(xintercept=ci[1], linetype="dashed", color="red") +
geom_vline(xintercept=ci[2], linetype="dashed", color="red") +
annotate("text", x=450, y=0.11, label=paste("P(mean PEF value > 442) = ", round(p, 4))) +
xlab("Mean PEF value") +
ggtitle("Posterior distribution of alpha", subtitle = "With 95% credible interval and the reference value") +
theme_minimal()
grid.arrange(p1, p2, p3, ncol=1)
grid.arrange(p1, p2, p3, ncol=2)
grid.arrange(p2, p3, ncol=2)
grid.arrange(p2, p3, ncol=1)
p = mean(draws_simple$alpha > 442)
ci = quantile(draws_simple$alpha, c(0.025, 0.975))
# plot alpha and its ci
p1 = ggplot(as.data.frame(draws_simple)) +
geom_density(aes(x=alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=442, linetype="dashed", color="purple") +
geom_vline(xintercept=ci[1], linetype="dashed", color="red") +
geom_vline(xintercept=ci[2], linetype="dashed", color="red") +
annotate("text", x=450, y=0.11, label=paste("P(mean PEF value > 442) = ", round(p, 4))) +
xlab("Mean PEF value") +
ggtitle("Posterior distribution of alpha", subtitle = "With 95% credible interval and the reference value") +
theme_minimal()
p1
# 95$\%$ credible intervals for medication on time of day
medication_effect <- draws_simple$treatment
time_of_day_effect <- draws_simple$circadian
day_of_week_effect <- draws_simple$followup
# Lets calculate the relative effects of medication and time of day
# alpha plus time
alpha_time <- draws_simple$alpha + draws_simple$circadian
# alpha + medication
alpha_med <- draws_simple$alpha + draws_simple$treatment
# alpha_time / alpha
alpha_time_alpha <- alpha_time / draws_simple$alpha
# alpha_med / alpha
alpha_med_alpha <- alpha_med / draws_simple$alpha
# Probability that the relative effect of medication is over 15$%
p_med <- mean(alpha_med_alpha < 1.15)
# Probability that the relative effect of time of day is over 20$%
p_time <- mean(alpha_time_alpha < 1.20)
# Plot the relative effects
p2 = ggplot() +
geom_density(aes(x=alpha_med_alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=1.15, linetype="dashed", color="purple") +
annotate("text", x=1.2, y=0.5, label=paste("P(relative effect of medication < 15%) = ", round(p_med, 4))) +
xlab("Relative effect of medication") +
ggtitle("Posterior distribution of the relative effect of medication", subtitle = "With 15% threshold") +
theme_minimal()
p3 = ggplot() +
geom_density(aes(x=alpha_time_alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=1.20, linetype="dashed", color="purple") +
annotate("text", x=1.25, y=0.5, label=paste("P(relative effect of time of day < 20%) = ", round(p_time, 4))) +
xlab("Relative effect of time of day") +
ggtitle("Posterior distribution of the relative effect of time of day", subtitle = "With 20% threshold") +
theme_minimal()
grid.arrange(p2, p3, ncol=1)
# 95$\%$ credible intervals for medication on time of day
medication_effect <- draws_simple$treatment
time_of_day_effect <- draws_simple$circadian
day_of_week_effect <- draws_simple$followup
# Lets calculate the relative effects of medication and time of day
# alpha plus time
alpha_time <- draws_simple$alpha + draws_simple$circadian
# alpha + medication
alpha_med <- draws_simple$alpha + draws_simple$treatment
# alpha_time / alpha
alpha_time_alpha <- alpha_time / draws_simple$alpha
# alpha_med / alpha
alpha_med_alpha <- alpha_med / draws_simple$alpha
# Probability that the relative effect of medication is over 15$%
p_med <- mean(alpha_med_alpha < 1.15)
# Probability that the relative effect of time of day is over 20$%
p_time <- mean(alpha_time_alpha < 1.20)
# Plot the relative effects
p2 = ggplot() +
geom_density(aes(x=alpha_med_alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=1.15, linetype="dashed", color="purple") +
annotate("text", x=1.2, y=45, label=paste("P(relative effect of medication < 15%) = ", round(p_med, 4))) +
xlab("Relative effect of medication") +
ggtitle("Posterior distribution of the relative effect of medication", subtitle = "With 15% threshold") +
theme_minimal()
p3 = ggplot() +
geom_density(aes(x=alpha_time_alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=1.20, linetype="dashed", color="purple") +
annotate("text", x=1.2, y=45, label=paste("P(relative effect of time of day < 20%) = ", round(p_time, 4))) +
xlab("Relative effect of time of day") +
ggtitle("Posterior distribution of the relative effect of time of day", subtitle = "With 20% threshold") +
theme_minimal()
grid.arrange(p2, p3, ncol=1)
# 95$\%$ credible intervals for medication on time of day
medication_effect <- draws_simple$treatment
time_of_day_effect <- draws_simple$circadian
day_of_week_effect <- draws_simple$followup
# Lets calculate the relative effects of medication and time of day
# alpha plus time
alpha_time <- draws_simple$alpha + draws_simple$circadian
# alpha + medication
alpha_med <- draws_simple$alpha + draws_simple$treatment
# alpha_time / alpha
alpha_time_alpha <- alpha_time / draws_simple$alpha
# alpha_med / alpha
alpha_med_alpha <- alpha_med / draws_simple$alpha
# Probability that the relative effect of medication is over 15$%
p_med <- mean(alpha_med_alpha < 1.15)
# Probability that the relative effect of time of day is over 20$%
p_time <- mean(alpha_time_alpha < 1.20)
# Plot the relative effects
p2 = ggplot() +
geom_density(aes(x=alpha_med_alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=1.15, linetype="dashed", color="purple") +
annotate("text", x=1.1, y=45, label=paste("P(relative effect of medication < 15%) = ", round(p_med, 4))) +
xlab("Relative effect of medication") +
ggtitle("Posterior distribution of the relative effect of medication", subtitle = "With 15% threshold") +
theme_minimal()
p3 = ggplot() +
geom_density(aes(x=alpha_time_alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=1.20, linetype="dashed", color="purple") +
annotate("text", x=1.1, y=45, label=paste("P(relative effect of time of day < 20%) = ", round(p_time, 4))) +
xlab("Relative effect of time of day") +
ggtitle("Posterior distribution of the relative effect of time of day", subtitle = "With 20% threshold") +
theme_minimal()
grid.arrange(p2, p3, ncol=1)
# 95$\%$ credible intervals for medication on time of day
medication_effect <- draws_simple$treatment
time_of_day_effect <- draws_simple$circadian
day_of_week_effect <- draws_simple$followup
# Lets calculate the relative effects of medication and time of day
# alpha plus time
alpha_time <- draws_simple$alpha + draws_simple$circadian
# alpha + medication
alpha_med <- draws_simple$alpha + draws_simple$treatment
# alpha_time / alpha
alpha_time_alpha <- alpha_time / draws_simple$alpha
# alpha_med / alpha
alpha_med_alpha <- alpha_med / draws_simple$alpha
# Probability that the relative effect of medication is over 15$%
p_med <- mean(alpha_med_alpha < 1.15)
# Probability that the relative effect of time of day is over 20$%
p_time <- mean(alpha_time_alpha < 1.20)
# Plot the relative effects
p2 = ggplot() +
geom_density(aes(x=alpha_med_alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=1.15, linetype="dashed", color="purple") +
annotate("text", x=1.1, y=45, label=paste("P(relative effect of medication < 15%) = ", round(p_med, 4))) +
xlab("Relative effect of medication") +
ggtitle("Posterior distribution of the relative effect of medication", subtitle = "With 15% threshold") +
theme_minimal()
p3 = ggplot() +
geom_density(aes(x=alpha_time_alpha), fill="blue", alpha=0.5) +
geom_vline(xintercept=1.20, linetype="dashed", color="purple") +
annotate("text", x=1.1, y=45, label=paste("P(relative effect of time of day < 20%) = ", round(p_time, 4))) +
xlab("Relative effect of time of day") +
ggtitle("Posterior distribution of the relative effect of time of day", subtitle = "With 20% threshold") +
theme_minimal()
p2
p3
